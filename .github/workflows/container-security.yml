name: üê≥ Container Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * *'

jobs:
  dockerfile-lint:
    name: Dockerfile Security Lint
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Lint Dockerfiles
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        config: .hadolint.yaml
        failure-threshold: warning
    
    - name: Adult Platform Security Check
      run: |
        echo "üîû Checking adult platform security compliance..."
        
        # Check for non-root user
        if ! grep -q "USER.*[^0]" Dockerfile 2>/dev/null; then
          echo "‚ùå Warning: Dockerfile should specify non-root user"
        fi
        
        # Check for health checks
        if ! grep -q "HEALTHCHECK" Dockerfile 2>/dev/null; then
          echo "‚ö†Ô∏è Warning: Dockerfile should include health check"
        fi
        
        echo "‚úÖ Adult platform compliance check completed"

  container-scan:
    name: Container Vulnerability Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        if [ -f Dockerfile ]; then
          docker build -t ${{ github.repository }}:${{ github.sha }} .
        else
          echo "No Dockerfile found, skipping container scan"
          exit 0
        fi
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ github.repository }}:${{ github.sha }}
        format: sarif
        output: trivy-results.sarif
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: trivy-results.sarif
    
    - name: Critical vulnerability check
      run: |
        echo "üö® Checking for critical vulnerabilities..."
        
        # Install jq if not available
        sudo apt-get update && sudo apt-get install -y jq
        
        # Run Trivy scan with JSON output
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          aquasec/trivy:latest image --format json \
          ${{ github.repository }}:${{ github.sha }} > scan-results.json
        
        # Count critical vulnerabilities
        CRITICAL=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL")] | length' scan-results.json || echo "0")
        HIGH=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "HIGH")] | length' scan-results.json || echo "0")
        
        echo "Critical vulnerabilities: $CRITICAL"
        echo "High vulnerabilities: $HIGH"
        
        # Adult platform security requirements
        if [ "$CRITICAL" -gt 0 ]; then
          echo "‚ùå CRITICAL vulnerabilities found - not suitable for adult platform deployment"
          exit 1
        fi
        
        if [ "$HIGH" -gt 5 ]; then
          echo "‚ö†Ô∏è Too many HIGH vulnerabilities for adult platform security standards"
          exit 1
        fi
        
        echo "‚úÖ Container security scan passed"
