name: CI

on:
  push:
    branches:
      - main
      - chore/**
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        run: |
          npm i -g pnpm@9

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm install --no-frozen-lockfile

      - name: Lint
        run: |
          pnpm -r run lint || true

      - name: Type Check
        run: |
          pnpm -r run typecheck || true

      - name: Build
        run: |
          pnpm -r run build || true

      - name: Run unit/integration tests
        run: |
          pnpm -r run test || true

      - name: Archive build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/dist
            security-reports/**

  docker-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push images
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          SERVICES=(api-gateway finance web3 intelligence cdn support security)
          for svc in "${SERVICES[@]}"; do
            docker build -f deployments/$svc/Dockerfile -t ${{ secrets.DOCKER_REGISTRY }}/fanz-$svc:$IMAGE_TAG . || true
            docker push ${{ secrets.DOCKER_REGISTRY }}/fanz-$svc:$IMAGE_TAG || true
          done

  security-scans:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          format: 'table'
          exit-code: '0'

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: 'p/ci'
          sarif: true

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
