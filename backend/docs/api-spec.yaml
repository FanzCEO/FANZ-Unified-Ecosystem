openapi: 3.0.3
info:
  title: FanzFinance OS API
  description: |
    Comprehensive financial management API for the FANZ ecosystem, providing payment processing, 
    subscription management, creator payouts, and financial reporting capabilities.
    
    ## Features
    - Real-time payment processing
    - Double-entry bookkeeping
    - Subscription billing automation
    - Creator payout management
    - Financial reporting and analytics
    - Multi-currency support
    - Security and compliance
    
  version: 1.0.0
  contact:
    name: FANZ Development Team
    email: dev@fanz.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api-staging.fanz.com
    description: Staging server
  - url: https://api.fanz.com
    description: Production server

tags:
  - name: Health
    description: System health and monitoring endpoints
  - name: Authentication
    description: User authentication and authorization
  - name: Payments
    description: Payment processing and transaction management
  - name: Subscriptions
    description: Subscription plan and billing management
  - name: Payouts
    description: Creator payout processing
  - name: Reports
    description: Financial reporting and analytics
  - name: Users
    description: User balance and transaction management

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from authentication endpoints

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: integer
        timestamp:
          type: string
          format: date-time
      required:
        - error
        - message

    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        services:
          type: object
          properties:
            database:
              type: string
              enum: [healthy, unhealthy]
            redis:
              type: string
              enum: [healthy, unhealthy]
            payment_system:
              type: string
              enum: [healthy, unhealthy]
        uptime:
          type: number
        version:
          type: string

    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        transaction_type:
          type: string
          enum: [subscription, tip, content_purchase, withdrawal, refund, commission, platform_fee, chargeback]
        sender_id:
          type: string
          format: uuid
          nullable: true
        recipient_id:
          type: string
          format: uuid
          nullable: true
        amount:
          type: number
          format: decimal
          minimum: 0.01
        currency:
          type: string
          default: USD
          enum: [USD, EUR, GBP, CAD]
        fee_amount:
          type: number
          format: decimal
          minimum: 0
        net_amount:
          type: number
          format: decimal
          readOnly: true
        status:
          type: string
          enum: [pending, processing, completed, failed, cancelled, refunded]
        description:
          type: string
        reference_id:
          type: string
          format: uuid
          nullable: true
        reference_type:
          type: string
          nullable: true
        payment_method:
          type: string
        payment_method_details:
          type: object
        processor_transaction_id:
          type: string
          nullable: true
        processor_response:
          type: object
          nullable: true
        metadata:
          type: object
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        failed_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true

    CreateTransactionRequest:
      type: object
      required:
        - transaction_type
        - amount
        - payment_method
      properties:
        transaction_type:
          type: string
          enum: [subscription, tip, content_purchase, withdrawal]
        sender_id:
          type: string
          format: uuid
        recipient_id:
          type: string
          format: uuid
        amount:
          type: number
          format: decimal
          minimum: 0.01
        currency:
          type: string
          default: USD
        description:
          type: string
        reference_id:
          type: string
          format: uuid
        reference_type:
          type: string
        payment_method:
          type: string
          enum: [credit_card, bank_account, paxum, crypto, store_credit]
        payment_method_details:
          type: object
        metadata:
          type: object

    SubscriptionPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
        creator_id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: decimal
          minimum: 0
        currency:
          type: string
          default: USD
        billing_cycle:
          type: string
          enum: [monthly, quarterly, yearly, lifetime]
        features:
          type: array
          items:
            type: string
        benefits:
          type: array
          items:
            type: string
        trial_period_days:
          type: integer
          minimum: 0
          default: 0
        max_subscribers:
          type: integer
          minimum: 1
          nullable: true
        is_active:
          type: boolean
          default: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    UserSubscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        subscriber_id:
          type: string
          format: uuid
        creator_id:
          type: string
          format: uuid
        plan_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [trial, active, cancelled, expired, suspended]
        is_trial:
          type: boolean
        payment_method:
          type: string
        payment_method_details:
          type: object
        current_period_start:
          type: string
          format: date-time
        current_period_end:
          type: string
          format: date-time
        trial_start:
          type: string
          format: date-time
          nullable: true
        trial_end:
          type: string
          format: date-time
          nullable: true
        cancelled_at:
          type: string
          format: date-time
          nullable: true
        cancellation_reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    Payout:
      type: object
      properties:
        id:
          type: string
          format: uuid
        creator_id:
          type: string
          format: uuid
        amount:
          type: number
          format: decimal
          minimum: 0.01
        currency:
          type: string
          default: USD
        payout_method:
          type: string
          enum: [bank_transfer, paxum, crypto, check, store_credit]
        payout_details:
          type: object
        status:
          type: string
          enum: [pending, processing, completed, failed, cancelled]
        period_start:
          type: string
          format: date-time
        period_end:
          type: string
          format: date-time
        processor_payout_id:
          type: string
          nullable: true
        processor_response:
          type: object
          nullable: true
        processing_fee:
          type: number
          format: decimal
          minimum: 0
        net_amount:
          type: number
          format: decimal
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        processed_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        completed_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true

    UserBalance:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        balance_type:
          type: string
          enum: [available, pending, escrow, earnings]
        balance:
          type: number
          format: decimal
          minimum: 0
        currency:
          type: string
          default: USD
        last_transaction_id:
          type: string
          format: uuid
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
          minimum: 1
        per_page:
          type: integer
          minimum: 1
          maximum: 100
        total:
          type: integer
          minimum: 0
        total_pages:
          type: integer
          minimum: 0
        has_next_page:
          type: boolean
        has_prev_page:
          type: boolean

    PaginatedTransactions:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

paths:
  /api/health:
    get:
      tags:
        - Health
      summary: Application health check
      description: Returns the overall health status of the application and its dependencies
      security: []
      responses:
        '200':
          description: Health status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/health:
    get:
      tags:
        - Health
      summary: Payment system health check
      description: Returns the health status specifically for payment processing components
      security: []
      responses:
        '200':
          description: Payment system health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                  payment_processors:
                    type: object
                  database_connection:
                    type: string
                  redis_connection:
                    type: string

  /api/payments/transactions:
    get:
      tags:
        - Payments
      summary: List transactions
      description: Retrieve a paginated list of transactions with optional filtering
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: user_id
          in: query
          description: Filter by user ID (sender or recipient)
          schema:
            type: string
            format: uuid
        - name: transaction_type
          in: query
          description: Filter by transaction type
          schema:
            type: string
            enum: [subscription, tip, content_purchase, withdrawal, refund]
        - name: status
          in: query
          description: Filter by transaction status
          schema:
            type: string
            enum: [pending, processing, completed, failed, cancelled, refunded]
        - name: start_date
          in: query
          description: Filter transactions from this date
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          description: Filter transactions until this date
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactions'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Payments
      summary: Create transaction
      description: Create a new payment transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/transactions/{id}:
    get:
      tags:
        - Payments
      summary: Get transaction
      description: Retrieve a specific transaction by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/tips:
    post:
      tags:
        - Payments
      summary: Send tip
      description: Send a tip to a creator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recipient_id
                - amount
                - payment_method
              properties:
                recipient_id:
                  type: string
                  format: uuid
                amount:
                  type: number
                  format: decimal
                  minimum: 0.01
                currency:
                  type: string
                  default: USD
                message:
                  type: string
                  maxLength: 500
                payment_method:
                  type: string
                  enum: [credit_card, bank_account, paxum, crypto, store_credit]
                payment_method_details:
                  type: object
      responses:
        '201':
          description: Tip sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/dashboard:
    get:
      tags:
        - Payments
      summary: Payment dashboard
      description: Get payment dashboard data for the authenticated user
      parameters:
        - name: period
          in: query
          description: Time period for dashboard data
          schema:
            type: string
            enum: [today, week, month, quarter, year]
            default: month
      responses:
        '200':
          description: Dashboard data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_transactions:
                    type: integer
                  total_volume:
                    type: number
                    format: decimal
                  total_fees:
                    type: number
                    format: decimal
                  transaction_breakdown:
                    type: object
                  recent_transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'

  /api/subscriptions:
    get:
      tags:
        - Subscriptions
      summary: List subscription plans
      description: Retrieve subscription plans with optional filtering
      parameters:
        - name: creator_id
          in: query
          description: Filter by creator ID
          schema:
            type: string
            format: uuid
        - name: is_active
          in: query
          description: Filter by active status
          schema:
            type: boolean
      responses:
        '200':
          description: Subscription plans retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionPlan'

    post:
      tags:
        - Subscriptions
      summary: Create subscription
      description: Create a new subscription to a plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - plan_id
                - payment_method
              properties:
                plan_id:
                  type: string
                  format: uuid
                payment_method:
                  type: string
                  enum: [credit_card, bank_account, paxum]
                payment_method_details:
                  type: object
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'

  /api/payouts:
    get:
      tags:
        - Payouts
      summary: List payouts
      description: Retrieve payouts for the authenticated creator
      parameters:
        - name: status
          in: query
          description: Filter by payout status
          schema:
            type: string
            enum: [pending, processing, completed, failed, cancelled]
      responses:
        '200':
          description: Payouts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payout'

    post:
      tags:
        - Payouts
      summary: Request payout
      description: Request a payout of available earnings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - payout_method
                - payout_details
              properties:
                amount:
                  type: number
                  format: decimal
                  minimum: 10.00
                currency:
                  type: string
                  default: USD
                payout_method:
                  type: string
                  enum: [bank_transfer, paxum, crypto, check]
                payout_details:
                  type: object
      responses:
        '201':
          description: Payout requested successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payout'

  /api/reports/profit-loss:
    get:
      tags:
        - Reports
      summary: Profit & Loss statement
      description: Generate P&L statement for specified period
      parameters:
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: currency
          in: query
          schema:
            type: string
            default: USD
      responses:
        '200':
          description: P&L statement generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  period:
                    type: object
                    properties:
                      start_date:
                        type: string
                        format: date
                      end_date:
                        type: string
                        format: date
                  revenue:
                    type: object
                  expenses:
                    type: object
                  net_income:
                    type: number
                    format: decimal

  /api/reports/balance-sheet:
    get:
      tags:
        - Reports
      summary: Balance sheet
      description: Generate balance sheet as of specified date
      parameters:
        - name: as_of_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: currency
          in: query
          schema:
            type: string
            default: USD
      responses:
        '200':
          description: Balance sheet generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  as_of_date:
                    type: string
                    format: date
                  assets:
                    type: object
                  liabilities:
                    type: object
                  equity:
                    type: object

  /api/users/balance:
    get:
      tags:
        - Users
      summary: Get user balance
      description: Get current balance for authenticated user
      responses:
        '200':
          description: User balance retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserBalance'

  /api/users/transactions:
    get:
      tags:
        - Users
      summary: User transaction history
      description: Get transaction history for authenticated user
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: transaction_type
          in: query
          schema:
            type: string
            enum: [subscription, tip, content_purchase, withdrawal, refund]
      responses:
        '200':
          description: Transaction history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactions'