# ðŸ§ª FANZ Backend - Test Environment Configuration

# Environment
NODE_ENV=test
LOG_LEVEL=error

# Server Configuration
PORT=3001
API_VERSION=1.0.0

# Database Configuration (Test Database)
DATABASE_URL=postgresql://test_user:test_password@localhost:5432/fanz_test
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=fanz_test
DATABASE_USER=test_user
DATABASE_PASSWORD=test_password
DATABASE_SSL=false
DATABASE_POOL_MIN=1
DATABASE_POOL_MAX=5

# Redis Configuration (Test Instance)
REDIS_URL=redis://localhost:6380
REDIS_HOST=localhost
REDIS_PORT=6380
REDIS_PASSWORD=
REDIS_DB=1

# Authentication & Security (Test Keys)
JWT_SECRET=test-jwt-secret-for-testing-only-not-for-production
REFRESH_TOKEN_SECRET=test-refresh-secret-for-testing-only
ENCRYPTION_KEY={{EXAMPLE_ENCRYPTION_KEY_32_CHARS}}
WEBHOOK_SECRET=test-webhook-secret

# CORS Configuration
CORS_ORIGIN=http://localhost:3000,http://localhost:3001

# Rate Limiting (Relaxed for testing)
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=1000

# Payment Processors (Test Configuration)
DEFAULT_PROCESSOR=mock
GEO_ROUTING_ENABLED=false

# Mock Payment Processor
MOCK_PROCESSOR_ENABLED=true
MOCK_PROCESSOR_SUCCESS_RATE=1.0

# Stripe Test Keys (if needed for integration tests)
STRIPE_SECRET_KEY=sk_test_fake_key_for_testing
STRIPE_WEBHOOK_SECRET=whsec_fake_webhook_secret

# PayPal Test Keys (if needed for integration tests)
PAYPAL_CLIENT_ID=test_paypal_client_id
PAYPAL_CLIENT_SECRET={{EXAMPLE_PAYPAL_CLIENT_SECRET}}
PAYPAL_ENVIRONMENT=sandbox

# Monitoring & Health
METRICS_ENABLED=false
HEALTH_CHECK_TIMEOUT=3000

# Logging
LOG_FORMAT=simple
LOG_FILE_ENABLED=false

# Testing Specific
TEST_TIMEOUT=30000
SILENT_TESTS=true
TEST_PARALLEL=true
CLEAR_TEST_DATA=true