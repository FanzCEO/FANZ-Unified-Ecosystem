version: '3.8'

networks:
  fanz_production:
    driver: bridge

volumes:
  media_data:
    driver: local
  logs_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

services:
  # Main FANZ Ecosystem
  fanz-ecosystem:
    image: registry.digitalocean.com/fanz-docr/fanz-ecosystem:latest
    container_name: fanz_unified_ecosystem
    restart: unless-stopped
    env_file:
      - .env.production.local
    ports:
      - "8080:8080"
    volumes:
      - media_data:/app/media
      - logs_data:/app/logs
    networks:
      - fanz_production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: fanz_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - fanz_production

  grafana:
    image: grafana/grafana:latest
    container_name: fanz_grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=FanzGrafanaSecure2024!
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - fanz_production

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: fanz_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - fanz_production
    depends_on:
      - fanz-ecosystem
