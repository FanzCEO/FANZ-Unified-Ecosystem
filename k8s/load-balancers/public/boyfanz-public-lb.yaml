---
# BoyFanz Public Load Balancer (DigitalOcean)
# Handles external traffic for boyfanz.com and admin.boyfanz.com
apiVersion: v1
kind: Service
metadata:
  name: boyfanz-public-lb
  namespace: ingress-nginx
  labels:
    app: boyfanz-ingress
    brand: boyfanz
    tier: public
    system: fanz
  annotations:
    # DigitalOcean Load Balancer Configuration
    service.beta.kubernetes.io/do-loadbalancer-name: "boyfanz-public-nyc3"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-http-ports: "80"
    service.beta.kubernetes.io/do-loadbalancer-https-ports: "443"
    service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
    service.beta.kubernetes.io/do-loadbalancer-algorithm: "least_connections"
    service.beta.kubernetes.io/do-loadbalancer-size-unit: "3"
    
    # TLS Configuration - Replace with actual cert ID
    service.beta.kubernetes.io/do-loadbalancer-certificate-id: "cert-boyfanz-com"
    service.beta.kubernetes.io/do-loadbalancer-tls-passthrough: "false"
    
    # Health Check Configuration
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-path: "/healthz"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-check-interval-seconds: "10"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-response-timeout-seconds: "5"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-unhealthy-threshold: "3"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-healthy-threshold: "2"
    
    # Proxy Protocol for real client IPs
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
    
    # Firewall Rules - Allow global access for public endpoints
    service.beta.kubernetes.io/do-loadbalancer-source-ranges: "0.0.0.0/0,::/0"
    
    # Tags for governance and billing
    service.beta.kubernetes.io/do-loadbalancer-tag: "fanz,boyfanz,public,prod"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: boyfanz-ingress
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  sessionAffinity: None

---
# NGINX Ingress Controller ConfigMap for BoyFanz
apiVersion: v1
kind: ConfigMap
metadata:
  name: boyfanz-nginx-config
  namespace: ingress-nginx
  labels:
    app: boyfanz-ingress
    brand: boyfanz
data:
  # Proxy Protocol Configuration
  use-proxy-protocol: "true"
  compute-full-forwarded-for: "true"
  real-ip-header: "proxy_protocol"
  set-real-ip-from: "10.0.0.0/8"  # DigitalOcean VPC CIDR
  
  # Security Headers
  add-headers: "fanz-core/security-headers"
  
  # Performance Optimizations
  proxy-body-size: "256m"
  proxy-connect-timeout: "60"
  proxy-read-timeout: "60"
  proxy-send-timeout: "60"
  
  # SSL Configuration
  ssl-protocols: "TLSv1.3"
  ssl-ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
  ssl-prefer-server-ciphers: "false"
  
  # Adult Content Headers
  server-snippet: |
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;
    
    # Adult content warning headers
    add_header X-Adult-Content "true" always;
    add_header Age-Verification "required" always;