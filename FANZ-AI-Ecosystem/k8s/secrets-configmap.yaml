apiVersion: v1
kind: ConfigMap
metadata:
  name: fanz-ai-config
  namespace: fanz-ai-ecosystem
  labels:
    app: fanz-ai-ecosystem
    component: configuration
data:
  # Application Configuration
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  CORS_ORIGINS: "https://fanz.network,https://boyfanz.com,https://girlfanz.com,https://pupfanz.com"
  
  # Service Discovery
  AI_INTELLIGENCE_HUB_URL: "http://ai-intelligence-hub:80"
  AI_CREATOR_ASSISTANT_URL: "http://ai-creator-assistant:80"
  CONTENT_CURATION_ENGINE_URL: "http://content-curation-engine:80"
  CONTENT_DISTRIBUTION_NETWORK_URL: "http://content-distribution-network:80"
  SECURITY_PRIVACY_FRAMEWORK_URL: "http://security-privacy-framework:80"
  COMPLIANCE_ACCESSIBILITY_EXCELLENCE_URL: "http://compliance-accessibility-excellence:80"
  
  # Rate Limiting
  RATE_LIMIT_WINDOW_MS: "900000"
  RATE_LIMIT_MAX_REQUESTS: "1000"
  RATE_LIMIT_SKIP_FAILED_REQUESTS: "false"
  RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS: "false"
  
  # Cache Configuration
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "1000"
  
  # Monitoring
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  HEALTH_CHECK_INTERVAL: "30000"
  
  # AI Model Configuration
  AI_MODEL_PROVIDER: "openai"
  AI_MODEL_VERSION: "gpt-4-turbo-preview"
  AI_MAX_TOKENS: "4000"
  AI_TEMPERATURE: "0.7"
  
  # Media Processing
  MEDIA_MAX_FILE_SIZE: "100MB"
  MEDIA_ALLOWED_TYPES: "image/jpeg,image/png,image/webp,video/mp4,video/webm"
  MEDIA_QUALITY_SETTINGS: "high"
  
  # Security Settings
  SECURITY_SCAN_ENABLED: "true"
  CONTENT_MODERATION_ENABLED: "true"
  THREAT_DETECTION_ENABLED: "true"
  
  # Compliance Settings
  GDPR_COMPLIANCE_ENABLED: "true"
  CCPA_COMPLIANCE_ENABLED: "true"
  ADA_COMPLIANCE_ENABLED: "true"
  DATA_RETENTION_DAYS: "2555"
  AUDIT_LOG_ENABLED: "true"

# NOTE: Secrets are defined in a separate template file
# Copy k8s/secrets.template.yaml to k8s/secrets.yaml and fill with real values
# Apply secrets separately: kubectl apply -f k8s/secrets.yaml

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fanz-ai-service-account
  namespace: fanz-ai-ecosystem
  labels:
    app: fanz-ai-ecosystem
    component: security
automountServiceAccountToken: false

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fanz-ai-role
  namespace: fanz-ai-ecosystem
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fanz-ai-role-binding
  namespace: fanz-ai-ecosystem
subjects:
- kind: ServiceAccount
  name: fanz-ai-service-account
  namespace: fanz-ai-ecosystem
roleRef:
  kind: Role
  name: fanz-ai-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fanz-ai-network-policy
  namespace: fanz-ai-ecosystem
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: fanz-ai-ecosystem
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector: {}
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: fanz-ai-ecosystem
    - namespaceSelector:
        matchLabels:
          name: kube-system
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80