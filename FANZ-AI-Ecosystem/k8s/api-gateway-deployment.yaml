apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: ${NAMESPACE:-fanz-ai-ecosystem}
  labels:
    app: api-gateway
    version: v1
    component: gateway
    part-of: fanz-ecosystem
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        app: api-gateway
        version: v1
        component: gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: api-gateway
        image: ${REGISTRY:-ghcr.io/joshuastone}/api-gateway:${VERSION:-latest}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: AUTH_ENABLED
          value: "true"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: api-gateway-secret
              key: jwt-secret
        - name: CORS_ORIGINS
          value: "https://fanz.network,https://boyfanz.com,https://girlfanz.com,https://pupfanz.com"
        - name: AI_INTELLIGENCE_HUB_URL
          value: "http://ai-intelligence-hub:3000"
        - name: AI_CREATOR_ASSISTANT_URL
          value: "http://ai-creator-assistant:3000"
        - name: CONTENT_CURATION_ENGINE_URL
          value: "http://content-curation-engine:3000"
        - name: CONTENT_DISTRIBUTION_NETWORK_URL
          value: "http://content-distribution-network:3000"
        - name: SECURITY_PRIVACY_FRAMEWORK_URL
          value: "http://security-privacy-framework:3000"
        - name: COMPLIANCE_ACCESSIBILITY_EXCELLENCE_URL
          value: "http://compliance-accessibility-excellence:3000"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
      serviceAccountName: api-gateway-sa