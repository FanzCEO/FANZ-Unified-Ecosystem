{"check_type": "kubernetes", "results": {"passed_checks": [{"check_id": "CKV_K8S_37", "bc_check_id": "BC_K8S_34", "check_name": "Minimize the admission of containers with capabilities assigned", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.MinimizeCapabilities", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-34", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_80", "bc_check_id": "BC_K8S_57", "check_name": "Ensure that the admission control plugin AlwaysPullImages is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAlwaysPullImagesPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-alwayspullimages-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_113", "bc_check_id": "BC_K8S_86", "check_name": "Ensure that the --bind-address argument is set to 127.0.0.1", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ControllerManagerBindAddress", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-bind-address-argument-is-set-to-127001", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_34", "bc_check_id": "BC_K8S_32", "check_name": "Ensure that Tiller (Helm v2) is not deployed", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.Tiller", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-32", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_31", "bc_check_id": "BC_K8S_29", "check_name": "Ensure that the seccomp profile is set to docker/default or runtime/default", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.Seccomp", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-29", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_8", "bc_check_id": "BC_K8S_7", "check_name": "Liveness Probe Should be Configured", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.LivenessProbe", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-7", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_33", "bc_check_id": "BC_K8S_31", "check_name": "Ensure the Kubernetes dashboard is not deployed", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubernetesDashboard", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-31", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_104", "bc_check_id": "BC_K8S_78", "check_name": "Ensure that encryption providers are appropriately configured", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerEncryptionProviders", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-etcd-cafile-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_12", "bc_check_id": "BC_K8S_11", "check_name": "Memory requests should be set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.MemoryRequests", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-11", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_77", "bc_check_id": "BC_K8S_54", "check_name": "Ensure that the --authorization-mode argument includes RBAC", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuthorizationModeRBAC", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-authorization-mode-argument-includes-rbac", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_82", "bc_check_id": "BC_K8S_59", "check_name": "Ensure that the admission control plugin ServiceAccount is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerServiceAccountPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-serviceaccount-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_74", "bc_check_id": "BC_K8S_52", "check_name": "Ensure that the --authorization-mode argument is not set to AlwaysAllow", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuthorizationModeNotAlwaysAllow", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-authorization-mode-argument-is-not-set-to-alwaysallow-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_20", "bc_check_id": "BC_K8S_19", "check_name": "Containers should not run with allowPrivilegeEscalation", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.AllowPrivilegeEscalation", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-19", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_26", "bc_check_id": "BC_K8S_25", "check_name": "Do not specify hostPort unless absolutely necessary", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.HostPort", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-25", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_97", "bc_check_id": "BC_K8S_73", "check_name": "Ensure that the --service-account-key-file argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerServiceAccountKeyFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-service-account-key-file-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_114", "bc_check_id": "BC_K8S_87", "check_name": "Ensure that the --profiling argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.SchedulerProfiling", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-profiling-argument-is-set-to-false-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_108", "bc_check_id": "BC_K8S_82", "check_name": "Ensure that the --use-service-account-credentials argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerServiceAccountCredentials", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-use-service-account-credentials-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_146", "bc_check_id": "BC_K8S_102", "check_name": "Ensure that the --hostname-override argument is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletHostnameOverride", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-hostname-override-argument-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_112", "bc_check_id": "BC_K8S_85", "check_name": "Ensure that the RotateKubeletServerCertificate argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.RotateKubeletServerCertificate", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-rotatekubeletservercertificate-argument-is-set-to-true-for-controller-manager", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_15", "bc_check_id": "BC_K8S_14", "check_name": "Image Pull Policy should be Always", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ImagePullPolicyAlways", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-14", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_148", "bc_check_id": "BC_K8S_104", "check_name": "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletKeyFilesSetAppropriate", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-tls-cert-file-and-tls-private-key-file-arguments-are-set-as-appropriate-for-kubelet", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_27", "bc_check_id": "BC_K8S_26", "check_name": "Do not expose the docker daemon socket to containers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DockerSocketVolume", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-26", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_89", "bc_check_id": "BC_K8S_65", "check_name": "Ensure that the --secure-port argument is not set to 0", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerSecurePort", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-secure-port-argument-is-not-set-to-0", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_13", "bc_check_id": "BC_K8S_12", "check_name": "Memory limits should be set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.MemoryLimits", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-12", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_70", "bc_check_id": "BC_K8S_48", "check_name": "Ensure that the --token-auth-file argument is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerTokenAuthFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-token-auth-file-parameter-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_68", "bc_check_id": "BC_K8S_46", "check_name": "Ensure that the --anonymous-auth argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAnonymousAuth", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-anonymous-auth-argument-is-set-to-false-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_151", "bc_check_id": "BC_K8S_76", "check_name": "Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletCryptographicCiphers", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-kubelet-only-makes-use-of-strong-cryptographic-ciphers", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_141", "bc_check_id": "BC_K8S_98", "check_name": "Ensure that the --read-only-port argument is set to 0", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletReadOnlyPort", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-read-only-port-argument-is-set-to-0", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_119", "bc_check_id": "BC_K8S_92", "check_name": "Ensure that the --peer-cert-file and --peer-key-file arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.EtcdPeerFiles", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-peer-cert-file-and-peer-key-file-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_106", "bc_check_id": "BC_K8S_80", "check_name": "Ensure that the --terminated-pod-gc-threshold argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerTerminatedPods", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-terminated-pod-gc-threshold-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_143", "bc_check_id": "BC_K8S_99", "check_name": "Ensure that the --streaming-connection-idle-timeout argument is not set to 0", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletStreamingConnectionIdleTimeout", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-streaming-connection-idle-timeout-argument-is-not-set-to-0", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_40", "bc_check_id": "BC_K8S_37", "check_name": "Containers should run as a high UID to avoid host conflict", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.RootContainersHighUID", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-37", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_10", "bc_check_id": "BC_K8S_9", "check_name": "CPU requests should be set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.CPURequests", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-9", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_79", "bc_check_id": "BC_K8S_56", "check_name": "Ensure that the admission control plugin AlwaysAdmit is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAdmissionControlAlwaysAdmit", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-alwaysadmit-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_39", "bc_check_id": "BC_K8S_36", "check_name": "Do not use the CAP_SYS_ADMIN linux capability", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.AllowedCapabilitiesSysAdmin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-36", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_115", "bc_check_id": "BC_K8S_88", "check_name": "Ensure that the --bind-address argument is set to 127.0.0.1", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.SchedulerBindAddress", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-bind-address-argument-is-set-to-127001-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_16", "bc_check_id": "BC_K8S_15", "check_name": "Container should not be privileged", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.PrivilegedContainers", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-15", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_88", "bc_check_id": "BC_K8S_64", "check_name": "Ensure that the --insecure-port argument is set to 0", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerInsecurePort", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-insecure-port-argument-is-set-to-0", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_111", "bc_check_id": "BC_K8S_84", "check_name": "Ensure that the --root-ca-file argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerRootCAFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-root-ca-file-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_19", "bc_check_id": "BC_K8S_18", "check_name": "Containers should not share the host network namespace", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.SharedHostNetworkNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-18", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_84", "bc_check_id": "BC_K8S_61", "check_name": "Ensure that the admission control plugin PodSecurityPolicy is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerPodSecurityPolicyPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-podsecuritypolicy-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_116", "bc_check_id": "BC_K8S_89", "check_name": "Ensure that the --cert-file and --key-file arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.EtcdCertAndKey", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-cert-file-and-key-file-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_91", "bc_check_id": "BC_K8S_67", "check_name": "Ensure that the --audit-log-path argument is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuditLog", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-audit-log-path-argument-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_22", "bc_check_id": "BC_K8S_21", "check_name": "Use read-only filesystem for containers where possible", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ReadOnlyFilesystem", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-21", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_95", "bc_check_id": "BC_K8S_71", "check_name": "Ensure that the --request-timeout argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerRequestTimeout", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-request-timeout-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_93", "bc_check_id": "BC_K8S_69", "check_name": "Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuditLogMaxBackup", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-audit-log-maxbackup-argument-is-set-to-10-or-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_9", "bc_check_id": "BC_K8S_8", "check_name": "Readiness Probe Should be Configured", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ReadinessProbe", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-8", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_145", "bc_check_id": "BC_K8S_101", "check_name": "Ensure that the --make-iptables-util-chains argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletMakeIptablesUtilChains", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-make-iptables-util-chains-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_110", "bc_check_id": "BC_K8S_83", "check_name": "Ensure that the --service-account-private-key-file argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerServiceAccountPrivateKeyFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-service-account-private-key-file-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_105", "bc_check_id": "BC_K8S_79", "check_name": "Ensure that the API Server only makes use of Strong Cryptographic Ciphers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerStrongCryptographicCiphers", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-api-server-only-makes-use-of-strong-cryptographic-ciphers", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_144", "bc_check_id": "BC_K8S_100", "check_name": "Ensure that the --protect-kernel-defaults argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletProtectKernelDefaults", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-protect-kernel-defaults-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_69", "bc_check_id": "BC_K8S_47", "check_name": "Ensure that the --basic-auth-file argument is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerBasicAuthFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-basic-auth-file-argument-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_100", "bc_check_id": "BC_K8S_75", "check_name": "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerTlsCertAndKey", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-tls-cert-file-and-tls-private-key-file-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_159", "bc_check_id": null, "check_name": "Limit the use of git-sync to prevent code injection", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DangerousGitSync", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_72", "bc_check_id": "BC_K8S_50", "check_name": "Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerKubeletClientCertAndKey", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-kubelet-client-certificate-and-kubelet-client-key-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_35", "bc_check_id": "BC_K8S_33", "check_name": "Prefer using secrets as files over secrets as environment variables", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.Secrets", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-33", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_75", "bc_check_id": "BC_K8S_53", "check_name": "Ensure that the --authorization-mode argument includes Node", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuthorizationModeNode", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-authorization-mode-argument-includes-node", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_17", "bc_check_id": "BC_K8S_16", "check_name": "Containers should not share the host process ID namespace", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ShareHostPID", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-16", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_18", "bc_check_id": "BC_K8S_17", "check_name": "Containers should not share the host IPC namespace", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ShareHostIPC", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-17", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_138", "bc_check_id": "BC_K8S_95", "check_name": "Ensure that the --anonymous-auth argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletAnonymousAuth", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-anonymous-auth-argument-is-set-to-false", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_28", "bc_check_id": "BC_K8S_27", "check_name": "Minimize the admission of containers with the NET_RAW capability", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DropCapabilities", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-27", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_117", "bc_check_id": "BC_K8S_90", "check_name": "Ensure that the --client-cert-auth argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.EtcdClientCertAuth", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-client-cert-auth-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_25", "bc_check_id": "BC_K8S_24", "check_name": "Minimize the admission of containers with added capability", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.AllowedCapabilities", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-24", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_81", "bc_check_id": "BC_K8S_58", "check_name": "Ensure that the admission control plugin SecurityContextDeny is set if PodSecurityPolicy is not used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerSecurityContextDenyPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-securitycontextdeny-is-set-if-podsecuritypolicy-is-not-used", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_102", "bc_check_id": "BC_K8S_77", "check_name": "Ensure that the --etcd-cafile argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerEtcdCaFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-etcd-cafile-argument-is-set-as-appropriate-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_73", "bc_check_id": "BC_K8S_51", "check_name": "Ensure that the --kubelet-certificate-authority argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerkubeletCertificateAuthority", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-kubelet-certificate-authority-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_86", "bc_check_id": "BC_K8S_63", "check_name": "Ensure that the --insecure-bind-address argument is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerInsecureBindAddress", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-insecure-bind-address-argument-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_85", "bc_check_id": "BC_K8S_62", "check_name": "Ensure that the admission control plugin NodeRestriction is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerNodeRestrictionPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-noderestriction-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_99", "bc_check_id": "BC_K8S_74", "check_name": "Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerEtcdCertAndKey", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-etcd-certfile-and-etcd-keyfile-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_29", "bc_check_id": "BC_K8S_43", "check_name": "Apply security context to your pods and containers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.PodSecurityContext", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-securitycontext-is-applied-to-pods-and-containers", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_30", "bc_check_id": "BC_K8S_28", "check_name": "Apply security context to your containers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ContainerSecurityContext", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-28", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_90", "bc_check_id": "BC_K8S_66", "check_name": "Ensure that the --profiling argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerProfiling", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-profiling-argument-is-set-to-false-2", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_92", "bc_check_id": "BC_K8S_68", "check_name": "Ensure that the --audit-log-maxage argument is set to 30 or as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuditLogMaxAge", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-audit-log-maxage-argument-is-set-to-30-or-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_71", "bc_check_id": "BC_K8S_49", "check_name": "Ensure that the --kubelet-https argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerKubeletHttps", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-kubelet-https-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_147", "bc_check_id": "BC_K8S_103", "check_name": "Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubletEventCapture", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-event-qps-argument-is-set-to-0-or-a-level-which-ensures-appropriate-event-capture", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_14", "bc_check_id": "BC_K8S_13", "check_name": "Image Tag should be fixed - not latest or blank", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ImageTagFixed", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-13", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_94", "bc_check_id": "BC_K8S_70", "check_name": "Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuditLogMaxSize", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-audit-log-maxsize-argument-is-set-to-100-or-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_107", "bc_check_id": "BC_K8S_81", "check_name": "Ensure that the --profiling argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerBlockProfiles", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-profiling-argument-is-set-to-false", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_38", "bc_check_id": "BC_K8S_35", "check_name": "Ensure that Service Account Tokens are only mounted where necessary", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ServiceAccountTokens", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-35", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_21", "bc_check_id": "BC_K8S_20", "check_name": "The default namespace should not be used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_23", "bc_check_id": "BC_K8S_22", "check_name": "Minimize the admission of root containers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.RootContainers", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-22", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_139", "bc_check_id": "BC_K8S_96", "check_name": "Ensure that the --authorization-mode argument is not set to AlwaysAllow", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletAuthorizationModeNotAlwaysAllow", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-authorization-mode-argument-is-not-set-to-alwaysallow", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_43", "bc_check_id": "BC_K8S_39", "check_name": "Image should use digest", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ImageDigest", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-39", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_11", "bc_check_id": "BC_K8S_10", "check_name": "CPU limits should be set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.CPULimits", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-10", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_149", "bc_check_id": "BC_K8S_105", "check_name": "Ensure that the --rotate-certificates argument is not set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubletRotateCertificates", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-rotate-certificates-argument-is-not-set-to-false", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_118", "bc_check_id": "BC_K8S_91", "check_name": "Ensure that the --auto-tls argument is not set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.EtcdAutoTls", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-auto-tls-argument-is-not-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_83", "bc_check_id": "BC_K8S_60", "check_name": "Ensure that the admission control plugin NamespaceLifecycle is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerNamespaceLifecyclePlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-namespacelifecycle-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_96", "bc_check_id": "BC_K8S_72", "check_name": "Ensure that the --service-account-lookup argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerServiceAccountLookup", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-service-account-lookup-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_41", "bc_check_id": "BC_K8S_38", "check_name": "Ensure that default service accounts are not actively used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[249, "apiVersion: v1\n"], [250, "kind: ServiceAccount\n"], [251, "metadata:\n"], [252, "  name: fanz-backend-sa\n"], [253, "  namespace: fanz-production\n"], [254, "automountServiceAccountToken: false\n"], [255, "\n"], [256, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [249, 256], "resource": "ServiceAccount.fanz-production.fanz-backend-sa", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultServiceAccount", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-38", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_21", "bc_check_id": "BC_K8S_20", "check_name": "The default namespace should not be used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[249, "apiVersion: v1\n"], [250, "kind: ServiceAccount\n"], [251, "metadata:\n"], [252, "  name: fanz-backend-sa\n"], [253, "  namespace: fanz-production\n"], [254, "automountServiceAccountToken: false\n"], [255, "\n"], [256, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [249, 256], "resource": "ServiceAccount.fanz-production.fanz-backend-sa", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_21", "bc_check_id": "BC_K8S_20", "check_name": "The default namespace should not be used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[268, "apiVersion: v1\n"], [269, "kind: Service\n"], [270, "metadata:\n"], [271, "  name: fanz-backend-service\n"], [272, "  namespace: fanz-production\n"], [273, "  labels:\n"], [274, "    app: fanz-backend\n"], [275, "  annotations:\n"], [276, "    service.beta.kubernetes.io/aws-load-balancer-type: \"nlb\"\n"], [277, "    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: \"tcp\"\n"], [278, "spec:\n"], [279, "  type: ClusterIP\n"], [280, "  ports:\n"], [281, "  - name: http\n"], [282, "    port: 80\n"], [283, "    targetPort: http\n"], [284, "    protocol: TCP\n"], [285, "  - name: metrics\n"], [286, "    port: 3001\n"], [287, "    targetPort: metrics\n"], [288, "    protocol: TCP\n"], [289, "  selector:\n"], [290, "    app: fanz-backend\n"], [291, "\n"], [292, "---\n"]], "file_path": "/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/k8s/hardened-deployment.yaml", "file_line_range": [268, 292], "resource": "Service.fanz-production.fanz-backend-service", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_37", "bc_check_id": "BC_K8S_34", "check_name": "Minimize the admission of containers with capabilities assigned", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.MinimizeCapabilities", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-34", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_80", "bc_check_id": "BC_K8S_57", "check_name": "Ensure that the admission control plugin AlwaysPullImages is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAlwaysPullImagesPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-alwayspullimages-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_113", "bc_check_id": "BC_K8S_86", "check_name": "Ensure that the --bind-address argument is set to 127.0.0.1", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ControllerManagerBindAddress", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-bind-address-argument-is-set-to-127001", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_34", "bc_check_id": "BC_K8S_32", "check_name": "Ensure that Tiller (Helm v2) is not deployed", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.Tiller", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-32", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_31", "bc_check_id": "BC_K8S_29", "check_name": "Ensure that the seccomp profile is set to docker/default or runtime/default", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.Seccomp", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-29", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_8", "bc_check_id": "BC_K8S_7", "check_name": "Liveness Probe Should be Configured", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.LivenessProbe", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-7", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_33", "bc_check_id": "BC_K8S_31", "check_name": "Ensure the Kubernetes dashboard is not deployed", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubernetesDashboard", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-31", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_104", "bc_check_id": "BC_K8S_78", "check_name": "Ensure that encryption providers are appropriately configured", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerEncryptionProviders", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-etcd-cafile-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_12", "bc_check_id": "BC_K8S_11", "check_name": "Memory requests should be set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.MemoryRequests", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-11", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_77", "bc_check_id": "BC_K8S_54", "check_name": "Ensure that the --authorization-mode argument includes RBAC", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuthorizationModeRBAC", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-authorization-mode-argument-includes-rbac", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_82", "bc_check_id": "BC_K8S_59", "check_name": "Ensure that the admission control plugin ServiceAccount is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerServiceAccountPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-serviceaccount-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_74", "bc_check_id": "BC_K8S_52", "check_name": "Ensure that the --authorization-mode argument is not set to AlwaysAllow", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuthorizationModeNotAlwaysAllow", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-authorization-mode-argument-is-not-set-to-alwaysallow-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_20", "bc_check_id": "BC_K8S_19", "check_name": "Containers should not run with allowPrivilegeEscalation", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.AllowPrivilegeEscalation", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-19", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_26", "bc_check_id": "BC_K8S_25", "check_name": "Do not specify hostPort unless absolutely necessary", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.HostPort", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-25", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_97", "bc_check_id": "BC_K8S_73", "check_name": "Ensure that the --service-account-key-file argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerServiceAccountKeyFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-service-account-key-file-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_114", "bc_check_id": "BC_K8S_87", "check_name": "Ensure that the --profiling argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.SchedulerProfiling", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-profiling-argument-is-set-to-false-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_108", "bc_check_id": "BC_K8S_82", "check_name": "Ensure that the --use-service-account-credentials argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerServiceAccountCredentials", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-use-service-account-credentials-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_146", "bc_check_id": "BC_K8S_102", "check_name": "Ensure that the --hostname-override argument is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletHostnameOverride", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-hostname-override-argument-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_112", "bc_check_id": "BC_K8S_85", "check_name": "Ensure that the RotateKubeletServerCertificate argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.RotateKubeletServerCertificate", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-rotatekubeletservercertificate-argument-is-set-to-true-for-controller-manager", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_15", "bc_check_id": "BC_K8S_14", "check_name": "Image Pull Policy should be Always", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ImagePullPolicyAlways", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-14", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_148", "bc_check_id": "BC_K8S_104", "check_name": "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletKeyFilesSetAppropriate", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-tls-cert-file-and-tls-private-key-file-arguments-are-set-as-appropriate-for-kubelet", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_27", "bc_check_id": "BC_K8S_26", "check_name": "Do not expose the docker daemon socket to containers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DockerSocketVolume", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-26", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_89", "bc_check_id": "BC_K8S_65", "check_name": "Ensure that the --secure-port argument is not set to 0", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerSecurePort", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-secure-port-argument-is-not-set-to-0", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_13", "bc_check_id": "BC_K8S_12", "check_name": "Memory limits should be set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.MemoryLimits", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-12", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_70", "bc_check_id": "BC_K8S_48", "check_name": "Ensure that the --token-auth-file argument is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerTokenAuthFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-token-auth-file-parameter-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_68", "bc_check_id": "BC_K8S_46", "check_name": "Ensure that the --anonymous-auth argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAnonymousAuth", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-anonymous-auth-argument-is-set-to-false-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_151", "bc_check_id": "BC_K8S_76", "check_name": "Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletCryptographicCiphers", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-kubelet-only-makes-use-of-strong-cryptographic-ciphers", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_141", "bc_check_id": "BC_K8S_98", "check_name": "Ensure that the --read-only-port argument is set to 0", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletReadOnlyPort", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-read-only-port-argument-is-set-to-0", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_119", "bc_check_id": "BC_K8S_92", "check_name": "Ensure that the --peer-cert-file and --peer-key-file arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.EtcdPeerFiles", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-peer-cert-file-and-peer-key-file-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_106", "bc_check_id": "BC_K8S_80", "check_name": "Ensure that the --terminated-pod-gc-threshold argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerTerminatedPods", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-terminated-pod-gc-threshold-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_143", "bc_check_id": "BC_K8S_99", "check_name": "Ensure that the --streaming-connection-idle-timeout argument is not set to 0", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletStreamingConnectionIdleTimeout", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-streaming-connection-idle-timeout-argument-is-not-set-to-0", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_40", "bc_check_id": "BC_K8S_37", "check_name": "Containers should run as a high UID to avoid host conflict", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.RootContainersHighUID", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-37", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_10", "bc_check_id": "BC_K8S_9", "check_name": "CPU requests should be set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.CPURequests", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-9", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_79", "bc_check_id": "BC_K8S_56", "check_name": "Ensure that the admission control plugin AlwaysAdmit is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAdmissionControlAlwaysAdmit", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-alwaysadmit-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_39", "bc_check_id": "BC_K8S_36", "check_name": "Do not use the CAP_SYS_ADMIN linux capability", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.AllowedCapabilitiesSysAdmin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-36", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_115", "bc_check_id": "BC_K8S_88", "check_name": "Ensure that the --bind-address argument is set to 127.0.0.1", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.SchedulerBindAddress", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-bind-address-argument-is-set-to-127001-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_16", "bc_check_id": "BC_K8S_15", "check_name": "Container should not be privileged", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.PrivilegedContainers", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-15", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_88", "bc_check_id": "BC_K8S_64", "check_name": "Ensure that the --insecure-port argument is set to 0", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerInsecurePort", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-insecure-port-argument-is-set-to-0", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_111", "bc_check_id": "BC_K8S_84", "check_name": "Ensure that the --root-ca-file argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerRootCAFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-root-ca-file-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_19", "bc_check_id": "BC_K8S_18", "check_name": "Containers should not share the host network namespace", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.SharedHostNetworkNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-18", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_84", "bc_check_id": "BC_K8S_61", "check_name": "Ensure that the admission control plugin PodSecurityPolicy is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerPodSecurityPolicyPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-podsecuritypolicy-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_116", "bc_check_id": "BC_K8S_89", "check_name": "Ensure that the --cert-file and --key-file arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.EtcdCertAndKey", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-cert-file-and-key-file-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_91", "bc_check_id": "BC_K8S_67", "check_name": "Ensure that the --audit-log-path argument is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuditLog", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-audit-log-path-argument-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_22", "bc_check_id": "BC_K8S_21", "check_name": "Use read-only filesystem for containers where possible", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ReadOnlyFilesystem", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-21", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_95", "bc_check_id": "BC_K8S_71", "check_name": "Ensure that the --request-timeout argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerRequestTimeout", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-request-timeout-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_93", "bc_check_id": "BC_K8S_69", "check_name": "Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuditLogMaxBackup", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-audit-log-maxbackup-argument-is-set-to-10-or-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_9", "bc_check_id": "BC_K8S_8", "check_name": "Readiness Probe Should be Configured", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ReadinessProbe", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-8", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_145", "bc_check_id": "BC_K8S_101", "check_name": "Ensure that the --make-iptables-util-chains argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletMakeIptablesUtilChains", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-make-iptables-util-chains-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_110", "bc_check_id": "BC_K8S_83", "check_name": "Ensure that the --service-account-private-key-file argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerServiceAccountPrivateKeyFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-service-account-private-key-file-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_105", "bc_check_id": "BC_K8S_79", "check_name": "Ensure that the API Server only makes use of Strong Cryptographic Ciphers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerStrongCryptographicCiphers", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-api-server-only-makes-use-of-strong-cryptographic-ciphers", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_144", "bc_check_id": "BC_K8S_100", "check_name": "Ensure that the --protect-kernel-defaults argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletProtectKernelDefaults", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-protect-kernel-defaults-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_69", "bc_check_id": "BC_K8S_47", "check_name": "Ensure that the --basic-auth-file argument is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerBasicAuthFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-basic-auth-file-argument-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_100", "bc_check_id": "BC_K8S_75", "check_name": "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerTlsCertAndKey", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-tls-cert-file-and-tls-private-key-file-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_159", "bc_check_id": null, "check_name": "Limit the use of git-sync to prevent code injection", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DangerousGitSync", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": null, "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_72", "bc_check_id": "BC_K8S_50", "check_name": "Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerKubeletClientCertAndKey", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-kubelet-client-certificate-and-kubelet-client-key-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_35", "bc_check_id": "BC_K8S_33", "check_name": "Prefer using secrets as files over secrets as environment variables", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.Secrets", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-33", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_75", "bc_check_id": "BC_K8S_53", "check_name": "Ensure that the --authorization-mode argument includes Node", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuthorizationModeNode", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-authorization-mode-argument-includes-node", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_17", "bc_check_id": "BC_K8S_16", "check_name": "Containers should not share the host process ID namespace", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ShareHostPID", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-16", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_18", "bc_check_id": "BC_K8S_17", "check_name": "Containers should not share the host IPC namespace", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ShareHostIPC", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-17", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_138", "bc_check_id": "BC_K8S_95", "check_name": "Ensure that the --anonymous-auth argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletAnonymousAuth", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-anonymous-auth-argument-is-set-to-false", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_28", "bc_check_id": "BC_K8S_27", "check_name": "Minimize the admission of containers with the NET_RAW capability", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DropCapabilities", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-27", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_117", "bc_check_id": "BC_K8S_90", "check_name": "Ensure that the --client-cert-auth argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.EtcdClientCertAuth", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-client-cert-auth-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_25", "bc_check_id": "BC_K8S_24", "check_name": "Minimize the admission of containers with added capability", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.AllowedCapabilities", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-24", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_81", "bc_check_id": "BC_K8S_58", "check_name": "Ensure that the admission control plugin SecurityContextDeny is set if PodSecurityPolicy is not used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerSecurityContextDenyPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-securitycontextdeny-is-set-if-podsecuritypolicy-is-not-used", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_102", "bc_check_id": "BC_K8S_77", "check_name": "Ensure that the --etcd-cafile argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerEtcdCaFile", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-etcd-cafile-argument-is-set-as-appropriate-1", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_73", "bc_check_id": "BC_K8S_51", "check_name": "Ensure that the --kubelet-certificate-authority argument is set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerkubeletCertificateAuthority", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-kubelet-certificate-authority-argument-is-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_86", "bc_check_id": "BC_K8S_63", "check_name": "Ensure that the --insecure-bind-address argument is not set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerInsecureBindAddress", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-insecure-bind-address-argument-is-not-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_85", "bc_check_id": "BC_K8S_62", "check_name": "Ensure that the admission control plugin NodeRestriction is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerNodeRestrictionPlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-noderestriction-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_99", "bc_check_id": "BC_K8S_74", "check_name": "Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerEtcdCertAndKey", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-etcd-certfile-and-etcd-keyfile-arguments-are-set-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_29", "bc_check_id": "BC_K8S_43", "check_name": "Apply security context to your pods and containers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.PodSecurityContext", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-securitycontext-is-applied-to-pods-and-containers", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_30", "bc_check_id": "BC_K8S_28", "check_name": "Apply security context to your containers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ContainerSecurityContext", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-28", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_90", "bc_check_id": "BC_K8S_66", "check_name": "Ensure that the --profiling argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerProfiling", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-profiling-argument-is-set-to-false-2", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_92", "bc_check_id": "BC_K8S_68", "check_name": "Ensure that the --audit-log-maxage argument is set to 30 or as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuditLogMaxAge", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-audit-log-maxage-argument-is-set-to-30-or-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_71", "bc_check_id": "BC_K8S_49", "check_name": "Ensure that the --kubelet-https argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerKubeletHttps", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-kubelet-https-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_147", "bc_check_id": "BC_K8S_103", "check_name": "Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubletEventCapture", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-event-qps-argument-is-set-to-0-or-a-level-which-ensures-appropriate-event-capture", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_14", "bc_check_id": "BC_K8S_13", "check_name": "Image Tag should be fixed - not latest or blank", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ImageTagFixed", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-13", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_94", "bc_check_id": "BC_K8S_70", "check_name": "Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerAuditLogMaxSize", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-audit-log-maxsize-argument-is-set-to-100-or-as-appropriate", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_107", "bc_check_id": "BC_K8S_81", "check_name": "Ensure that the --profiling argument is set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeControllerManagerBlockProfiles", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-profiling-argument-is-set-to-false", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_38", "bc_check_id": "BC_K8S_35", "check_name": "Ensure that Service Account Tokens are only mounted where necessary", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ServiceAccountTokens", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-35", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_21", "bc_check_id": "BC_K8S_20", "check_name": "The default namespace should not be used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_23", "bc_check_id": "BC_K8S_22", "check_name": "Minimize the admission of root containers", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.RootContainers", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-22", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_139", "bc_check_id": "BC_K8S_96", "check_name": "Ensure that the --authorization-mode argument is not set to AlwaysAllow", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubeletAuthorizationModeNotAlwaysAllow", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-authorization-mode-argument-is-not-set-to-alwaysallow", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_43", "bc_check_id": "BC_K8S_39", "check_name": "Image should use digest", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ImageDigest", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-39", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_11", "bc_check_id": "BC_K8S_10", "check_name": "CPU limits should be set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.CPULimits", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-10", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_149", "bc_check_id": "BC_K8S_105", "check_name": "Ensure that the --rotate-certificates argument is not set to false", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.KubletRotateCertificates", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-rotate-certificates-argument-is-not-set-to-false", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_118", "bc_check_id": "BC_K8S_91", "check_name": "Ensure that the --auto-tls argument is not set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.EtcdAutoTls", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-auto-tls-argument-is-not-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_83", "bc_check_id": "BC_K8S_60", "check_name": "Ensure that the admission control plugin NamespaceLifecycle is set", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerNamespaceLifecyclePlugin", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-admission-control-plugin-namespacelifecycle-is-set", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_96", "bc_check_id": "BC_K8S_72", "check_name": "Ensure that the --service-account-lookup argument is set to true", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[14, "apiVersion: apps/v1\n"], [15, "kind: Deployment\n"], [16, "metadata:\n"], [17, "  name: fanz-backend-hardened\n"], [18, "  namespace: fanz-production\n"], [19, "  labels:\n"], [20, "    app: fanz-backend\n"], [21, "    version: hardened\n"], [22, "    tier: backend\n"], [23, "spec:\n"], [24, "  replicas: 3\n"], [25, "  strategy:\n"], [26, "    type: RollingUpdate\n"], [27, "    rollingUpdate:\n"], [28, "      maxUnavailable: 1\n"], [29, "      maxSurge: 1\n"], [30, "  selector:\n"], [31, "    matchLabels:\n"], [32, "      app: fanz-backend\n"], [33, "  template:\n"], [34, "    metadata:\n"], [35, "      labels:\n"], [36, "        app: fanz-backend\n"], [37, "        version: hardened\n"], [38, "        tier: backend\n"], [39, "      annotations:\n"], [40, "        # Security scanning annotations\n"], [41, "        security.fanz.network/scanned: \"true\"\n"], [42, "        security.fanz.network/scan-date: \"2024-09-15\"\n"], [43, "        # Prometheus monitoring\n"], [44, "        prometheus.io/scrape: \"true\"\n"], [45, "        prometheus.io/port: \"3001\"\n"], [46, "        prometheus.io/path: \"/metrics\"\n"], [47, "    spec:\n"], [48, "      # Service account with minimal permissions\n"], [49, "      serviceAccountName: fanz-backend-sa\n"], [50, "      automountServiceAccountToken: false\n"], [51, "      \n"], [52, "      # Security context for the pod\n"], [53, "      securityContext:\n"], [54, "        runAsNonRoot: true\n"], [55, "        runAsUser: 65532\n"], [56, "        runAsGroup: 65532\n"], [57, "        fsGroup: 65532\n"], [58, "        seccompProfile:\n"], [59, "          type: RuntimeDefault\n"], [60, "      \n"], [61, "      # Init container for setup (if needed)\n"], [62, "      initContainers:\n"], [63, "      - name: setup\n"], [64, "        image: gcr.io/distroless/base-debian12:nonroot@sha256:74cb0a36ef7e3efd9c12a5c3ca9cc4935ab8db11b3c8d9b9f8c1a9e5a2b3c4d5\n"], [65, "        securityContext:\n"], [66, "          runAsNonRoot: true\n"], [67, "          runAsUser: 65532\n"], [68, "          runAsGroup: 65532\n"], [69, "          allowPrivilegeEscalation: false\n"], [70, "          readOnlyRootFilesystem: true\n"], [71, "          capabilities:\n"], [72, "            drop:\n"], [73, "            - ALL\n"], [74, "        command: [\"/bin/sh\", \"-c\", \"echo 'Setup completed'\"]\n"], [75, "        resources:\n"], [76, "          limits:\n"], [77, "            memory: \"64Mi\"\n"], [78, "            cpu: \"50m\"\n"], [79, "          requests:\n"], [80, "            memory: \"32Mi\"\n"], [81, "            cpu: \"25m\"\n"], [82, "      \n"], [83, "      # Application container\n"], [84, "      containers:\n"], [85, "      - name: fanz-backend\n"], [86, "        image: fanz-backend:hardened@sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456  # Real digest\n"], [87, "        imagePullPolicy: Always\n"], [88, "        \n"], [89, "        # Security context for container\n"], [90, "        securityContext:\n"], [91, "          runAsNonRoot: true\n"], [92, "          runAsUser: 65532\n"], [93, "          runAsGroup: 65532\n"], [94, "          allowPrivilegeEscalation: false\n"], [95, "          readOnlyRootFilesystem: true\n"], [96, "          capabilities:\n"], [97, "            drop:\n"], [98, "            - ALL\n"], [99, "          seccompProfile:\n"], [100, "            type: RuntimeDefault\n"], [101, "        \n"], [102, "        # Environment variables from secrets and configmaps (using files for better security)\n"], [103, "        env:\n"], [104, "        - name: NODE_ENV\n"], [105, "          value: \"production\"\n"], [106, "        - name: PORT\n"], [107, "          value: \"3000\"\n"], [108, "        \n"], [109, "        # Resource limits and requests\n"], [110, "        resources:\n"], [111, "          limits:\n"], [112, "            memory: \"1Gi\"\n"], [113, "            cpu: \"500m\"\n"], [114, "            ephemeral-storage: \"1Gi\"\n"], [115, "          requests:\n"], [116, "            memory: \"512Mi\"\n"], [117, "            cpu: \"250m\"\n"], [118, "            ephemeral-storage: \"512Mi\"\n"], [119, "        \n"], [120, "        # Ports\n"], [121, "        ports:\n"], [122, "        - name: http\n"], [123, "          containerPort: 3000\n"], [124, "          protocol: TCP\n"], [125, "        - name: metrics\n"], [126, "          containerPort: 3001\n"], [127, "          protocol: TCP\n"], [128, "        \n"], [129, "        # Volume mounts (read-only where possible)\n"], [130, "        volumeMounts:\n"], [131, "        - name: tmp\n"], [132, "          mountPath: /tmp\n"], [133, "        - name: var-log\n"], [134, "          mountPath: /var/log\n"], [135, "        - name: app-cache\n"], [136, "          mountPath: /app/.cache\n"], [137, "        - name: config\n"], [138, "          mountPath: /app/config\n"], [139, "          readOnly: true\n"], [140, "        # Secret files mounted as files (more secure than env vars)\n"], [141, "        - name: database-secret\n"], [142, "          mountPath: /app/secrets/database\n"], [143, "          readOnly: true\n"], [144, "        - name: jwt-secret\n"], [145, "          mountPath: /app/secrets/jwt\n"], [146, "          readOnly: true\n"], [147, "        \n"], [148, "        # Health checks\n"], [149, "        livenessProbe:\n"], [150, "          httpGet:\n"], [151, "            path: /api/health\n"], [152, "            port: http\n"], [153, "            httpHeaders:\n"], [154, "            - name: X-Health-Check\n"], [155, "              value: \"liveness\"\n"], [156, "          initialDelaySeconds: 30\n"], [157, "          periodSeconds: 10\n"], [158, "          timeoutSeconds: 5\n"], [159, "          failureThreshold: 3\n"], [160, "          successThreshold: 1\n"], [161, "        \n"], [162, "        readinessProbe:\n"], [163, "          httpGet:\n"], [164, "            path: /api/ready\n"], [165, "            port: http\n"], [166, "            httpHeaders:\n"], [167, "            - name: X-Health-Check\n"], [168, "              value: \"readiness\"\n"], [169, "          initialDelaySeconds: 5\n"], [170, "          periodSeconds: 5\n"], [171, "          timeoutSeconds: 3\n"], [172, "          failureThreshold: 3\n"], [173, "          successThreshold: 1\n"], [174, "        \n"], [175, "        startupProbe:\n"], [176, "          httpGet:\n"], [177, "            path: /api/health\n"], [178, "            port: http\n"], [179, "          initialDelaySeconds: 10\n"], [180, "          periodSeconds: 10\n"], [181, "          timeoutSeconds: 5\n"], [182, "          failureThreshold: 10\n"], [183, "          successThreshold: 1\n"], [184, "      \n"], [185, "      # Volumes\n"], [186, "      volumes:\n"], [187, "      - name: tmp\n"], [188, "        emptyDir:\n"], [189, "          sizeLimit: \"100Mi\"\n"], [190, "      - name: var-log\n"], [191, "        emptyDir:\n"], [192, "          sizeLimit: \"500Mi\"\n"], [193, "      - name: app-cache\n"], [194, "        emptyDir:\n"], [195, "          sizeLimit: \"200Mi\"\n"], [196, "      - name: config\n"], [197, "        configMap:\n"], [198, "          name: fanz-config\n"], [199, "          defaultMode: 0444  # read-only\n"], [200, "      # Secret volumes (files are more secure than env vars)\n"], [201, "      - name: database-secret\n"], [202, "        secret:\n"], [203, "          secretName: fanz-database-secret\n"], [204, "          defaultMode: 0400  # read-only by owner\n"], [205, "      - name: jwt-secret\n"], [206, "        secret:\n"], [207, "          secretName: fanz-jwt-secret\n"], [208, "          defaultMode: 0400  # read-only by owner\n"], [209, "      \n"], [210, "      # Node selection and affinity\n"], [211, "      nodeSelector:\n"], [212, "        kubernetes.io/arch: amd64\n"], [213, "        node.kubernetes.io/instance-type: \"standard\"\n"], [214, "      \n"], [215, "      affinity:\n"], [216, "        podAntiAffinity:\n"], [217, "          preferredDuringSchedulingIgnoredDuringExecution:\n"], [218, "          - weight: 100\n"], [219, "            podAffinityTerm:\n"], [220, "              labelSelector:\n"], [221, "                matchExpressions:\n"], [222, "                - key: app\n"], [223, "                  operator: In\n"], [224, "                  values:\n"], [225, "                  - fanz-backend\n"], [226, "              topologyKey: kubernetes.io/hostname\n"], [227, "      \n"], [228, "      # Tolerations (if needed)\n"], [229, "      tolerations:\n"], [230, "      - key: \"fanz.network/dedicated\"\n"], [231, "        operator: \"Equal\"\n"], [232, "        value: \"backend\"\n"], [233, "        effect: \"NoSchedule\"\n"], [234, "      \n"], [235, "      # DNS policy\n"], [236, "      dnsPolicy: ClusterFirst\n"], [237, "      \n"], [238, "      # Restart policy\n"], [239, "      restartPolicy: Always\n"], [240, "      \n"], [241, "      # Priority class\n"], [242, "      priorityClassName: fanz-backend-priority\n"], [243, "      \n"], [244, "      # Termination grace period\n"], [245, "      terminationGracePeriodSeconds: 30\n"], [246, "\n"], [247, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [14, 247], "resource": "Deployment.fanz-production.fanz-backend-hardened", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.ApiServerServiceAccountLookup", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-that-the-service-account-lookup-argument-is-set-to-true", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_41", "bc_check_id": "BC_K8S_38", "check_name": "Ensure that default service accounts are not actively used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[249, "apiVersion: v1\n"], [250, "kind: ServiceAccount\n"], [251, "metadata:\n"], [252, "  name: fanz-backend-sa\n"], [253, "  namespace: fanz-production\n"], [254, "automountServiceAccountToken: false\n"], [255, "\n"], [256, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [249, 256], "resource": "ServiceAccount.fanz-production.fanz-backend-sa", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultServiceAccount", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-38", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_21", "bc_check_id": "BC_K8S_20", "check_name": "The default namespace should not be used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[249, "apiVersion: v1\n"], [250, "kind: ServiceAccount\n"], [251, "metadata:\n"], [252, "  name: fanz-backend-sa\n"], [253, "  namespace: fanz-production\n"], [254, "automountServiceAccountToken: false\n"], [255, "\n"], [256, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [249, 256], "resource": "ServiceAccount.fanz-production.fanz-backend-sa", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20", "details": [], "check_len": null, "definition_context_file_path": null}, {"check_id": "CKV_K8S_21", "bc_check_id": "BC_K8S_20", "check_name": "The default namespace should not be used", "check_result": {"result": "PASSED", "evaluated_keys": []}, "code_block": [[268, "apiVersion: v1\n"], [269, "kind: Service\n"], [270, "metadata:\n"], [271, "  name: fanz-backend-service\n"], [272, "  namespace: fanz-production\n"], [273, "  labels:\n"], [274, "    app: fanz-backend\n"], [275, "  annotations:\n"], [276, "    service.beta.kubernetes.io/aws-load-balancer-type: \"nlb\"\n"], [277, "    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: \"tcp\"\n"], [278, "spec:\n"], [279, "  type: ClusterIP\n"], [280, "  ports:\n"], [281, "  - name: http\n"], [282, "    port: 80\n"], [283, "    targetPort: http\n"], [284, "    protocol: TCP\n"], [285, "  - name: metrics\n"], [286, "    port: 3001\n"], [287, "    targetPort: metrics\n"], [288, "    protocol: TCP\n"], [289, "  selector:\n"], [290, "    app: fanz-backend\n"], [291, "\n"], [292, "---\n"]], "file_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_abs_path": "/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "repo_file_path": "/security/policies/Users/joshuastone/Documents/GitHub/FANZ_UNIFIED_ECOSYSTEM/k8s/hardened-deployment.yaml", "file_line_range": [268, 292], "resource": "Service.fanz-production.fanz-backend-service", "evaluations": {}, "check_class": "checkov.kubernetes.checks.resource.k8s.DefaultNamespace", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20", "details": [], "check_len": null, "definition_context_file_path": null}], "failed_checks": [], "skipped_checks": [], "parsing_errors": []}, "summary": {"passed": 182, "failed": 0, "skipped": 0, "parsing_errors": 0, "resource_count": 9, "checkov_version": "3.2.470"}, "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"}